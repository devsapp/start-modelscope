edition: 1.0.0
name: modelscope-app
# access是当前应用所需要的密钥信息配置：
# 密钥配置请参见：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用请参见：https://www.serverless-devs.com/serverless-devs/tool
access: {{ access }}

vars: # 全局变量
  region: {{ region }}
  version: fc-deploy-common-v17
  service:
    name: {{ serviceName }}
    description: "modelscope deployment"
    internetAccess: true
    role: {{ roleArn }}
    vpcConfig: auto
    nasConfig: auto

services:
  model_download_func:
    component: 'fc'
    actions:
      post-deploy:
        - component: fc invoke
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: model_download_func
        description: initialize model into nas storage
        handler: index.handler
        timeout: 86400
        memorySize: 16384
        cpu: 8
        diskSize: 10240
        instanceType: e1
        instanceConcurrency: 1
        runtime: python3.9
        codeUri: ./model_download
        environmentVariables:
          MODEL_ID: {{ modelId }}
          MODEL_VERSION: {{ modelRevision }}
          MODELSCOPE_CACHE: /mnt/auto
          MODELSCOPE_TOKEN: {{ accessToken }}
          MODELSCOPE_DOMAIN: {{ modelCache }}

  model_meta_func:
    component: 'fc'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: model_meta_func
        description: Meta Api
        handler: not-used
        timeout: 1800
        caPort: 9000
        instanceType: g1
        gpuMemorySize: 16384
        memorySize: 32768
        cpu: 8
        diskSize: 512
        instanceConcurrency: 1
        runtime: custom-container
        customContainerConfig:
          image: registry.${vars.region}.aliyuncs.com/modelscope-repo/modelscope:${vars.version}

      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET

  tgpu_basic_func:
    component: 'fc'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: model_app_func
        description: Deploy ModelScope applications of model {{ modelId }}
        handler: not-used
        timeout: 1800
        caPort: 9000
        instanceType: {{ gpuInstanceType }}
        gpuMemorySize: {{ gpuMemorySize }}
        memorySize: {{ memorySize }}
        cpu: 2
        diskSize: 512
        instanceConcurrency: 1
        initializer: 'true'
        initializationTimeout: 300
        runtime: custom-container
        customContainerConfig:
          image: registry.${vars.region}.aliyuncs.com/modelscope-repo/modelscope:${vars.version}
        environmentVariables:
          MODEL_ID: {{ modelId }}
          MODEL_VERSION: {{ modelRevision }}
          MODELSCOPE_CACHE: /mnt/auto
          MODELSCOPE_TOKEN: {{ accessToken }}
          TASK: {{ task }}

      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT

      # customDomains:
      #   - domainName: auto
      #     protocol: HTTP
      #     routeConfigs:
      #       - path: '/*'

  model_ui_func:
    component: 'fc'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: model_ui_func
        description: model ui web page
        memorySize: 1024
        instanceType: e1
        runtime: custom.debian10
        codeUri: ./model_ui
        handler: index.handler
        caPort: 7860
        timeout: 600
        instanceConcurrency: 100
        environmentVariables:
          MODEL_ID: {{ modelId }}
          MODEL_VERSION: {{ modelRevision }}
          TASK: {{ task }}
          PATH: /opt/python3.9/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin
          PYTHONPATH: /opt/python
          API_URL: ${tgpu_basic_func.output.url.system_url}
        customRuntimeConfig:
          command:
            - python3.9
          args:
            - "app.py"
        layers:
          - acs:fc:${vars.region}:official:layers/Python39/versions/2
          - acs:fc:${vars.region}:1431999136518149:layers/Python39-Gradio/versions/1
      triggers:
        - name: http_t
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
